{"title":"二叉树的遍历","date":"2019-12-18T03:02:17.533Z","link":"post/二叉树的遍历","updated":"2019-12-18T03:01:51.462Z","content":"<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//前序遍历(递归)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preorderTraversal</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    preorderTraversal(rootNode);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">preorderTraversal</span><span class=\"params\">(Node&lt;E&gt; node)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    System.out.println(node.element);</span><br><span class=\"line\">    preorderTraversal(node.leftNode);</span><br><span class=\"line\">    preorderTraversal(node.rightNode);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//中序遍历(递归)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inorderTraversal</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    inorderTraversal(rootNode);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">inorderTraversal</span><span class=\"params\">(Node&lt;E&gt; node)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    inorderTraversal(node.leftNode);</span><br><span class=\"line\">    System.out.println(node.element);</span><br><span class=\"line\">    inorderTraversal(node.rightNode);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//后序遍历(递归)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postorderTraversal</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    postorderTraversal(rootNode);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">postorderTraversal</span><span class=\"params\">(Node&lt;E&gt; node)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    postorderTraversal(node.leftNode);</span><br><span class=\"line\">    postorderTraversal(node.rightNode);</span><br><span class=\"line\">    System.out.println(node.element);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//层序遍历</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">levelOrderTraversal</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rootNode == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    Queue&lt;Node&lt;E&gt;&gt; queue = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">    queue.offer(rootNode);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!queue.isEmpty()) &#123;</span><br><span class=\"line\">        Node&lt;E&gt; node = queue.poll();</span><br><span class=\"line\">        System.out.println(node.element);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node.leftNode!=<span class=\"keyword\">null</span>)</span><br><span class=\"line\">            queue.offer(node.leftNode);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node.rightNode!=<span class=\"keyword\">null</span>)</span><br><span class=\"line\">            queue.offer(node.rightNode);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n","next":{"title":"Java面试","link":"post/Java面试"},"plink":"http://YIzzzzz.github.io/post/二叉树的遍历/"}